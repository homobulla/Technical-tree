(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{183:function(t,e,i){"use strict";i.r(e);var _=i(0),n=Object(_.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),i("p",[t._v("box-sizing 属性用于更改用于计算元素宽度和高度的默认的 CSS 盒子模型。可以使用此属性来模拟不正确支持 CSS 盒子模型规范的浏览器的行为。")]),t._v(" "),t._m(1),t._m(2),t._v(" "),i("ul",[t._m(3),t._v(" "),i("li",[i("p",[i("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/getComputedStyle",target:"_blank",rel:"noopener noreferrer"}},[t._v("getComputedStyle"),i("OutboundLink")],1),t._v(":用于获取计算样式的 Element。")])]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10)]),t._v(" "),t._m(11),t._v(" "),i("p",[t._v("在一个 web 页面的 css 渲染中，需要先介绍 Box、Formatting Context 的概念。")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"盒模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#盒模型","aria-hidden":"true"}},[this._v("#")]),this._v(" 盒模型")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"language-css line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-css"}},[i("code",[i("span",{attrs:{class:"token comment"}},[t._v("/* 标准模型 */")]),t._v("\n"),i("span",{attrs:{class:"token property"}},[t._v("box-sizing")]),i("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" content-box"),i("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),i("span",{attrs:{class:"token comment"}},[t._v("/*IE模型*/")]),t._v("\n"),i("span",{attrs:{class:"token property"}},[t._v("box-sizing")]),i("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),i("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[t._v("1")]),i("br"),i("span",{staticClass:"line-number"},[t._v("2")]),i("br"),i("span",{staticClass:"line-number"},[t._v("3")]),i("br"),i("span",{staticClass:"line-number"},[t._v("4")]),i("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"获取宽高"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取宽高","aria-hidden":"true"}},[this._v("#")]),this._v(" 获取宽高")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("dom.style.width/height")]),this._v(": 这种方式只能取到 dom 元素内联样式所设置的宽高，也就是说如果该节点的样式是在 style 标签中或外联的 CSS 文件中设置的话，通过这种方法是获取不到 dom 的宽高的。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("dom.offsetWidth/offsetHeight")]),this._v("返回一个元素的布局宽高度")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("window.screen.height/width")]),this._v("：获取屏幕的高度和宽度（屏幕分辨率）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("window.screen.availHeight/availWidth")]),this._v(":获取屏幕工作区域的高度和宽度（去掉状态栏）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("document.body.scrollHeight/Width")]),this._v(":网页全文的高度和宽度")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("document.body.scrollTop/scrollLeft")]),this._v(":滚动条卷上去的高度和向右卷的宽度")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("document.body.clientHeight/clientWidth")]),this._v(":网页可见区域的高度和宽度（不加边线）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("document.body.offsetHeight/offsetWidth")]),this._v(":网页可见区域的高度和宽度（加边线）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"bfc、-ifc、ffc-和-gfc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc、-ifc、ffc-和-gfc","aria-hidden":"true"}},[this._v("#")]),this._v(" BFC、 IFC、FFC 和 GFC")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"box"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#box","aria-hidden":"true"}},[this._v("#")]),this._v(" Box")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("Box:CSS 布局的基本单位,Box 是 CSS 布局的对象和基本单位， 直观点来说，就是一个页面是由很多个 Box 组成的。元素的类型和 display 属性，决定了这个 Box 的类型。 不同类型的 Box， 会参与不同的 "),i("code",[t._v("Formatting Context")]),t._v("（块级格式化上下文 ），因此 Box 内的元素会以不同的方式渲染。让我们看看有哪些盒子：\n"),i("ul",[i("li",[i("code",[t._v("block-level box")]),t._v(":display 属性为 "),i("code",[t._v("block")]),t._v(", "),i("code",[t._v("list-item")]),t._v(", "),i("code",[t._v("table")]),t._v(" 的元素，会生成\n"),i("code",[t._v("block-level box")]),t._v("。并且参与 "),i("code",[t._v("block fomatting context")]),t._v(";")]),t._v(" "),i("li",[i("code",[t._v("inline-level box")]),t._v(":display 属性为 "),i("code",[t._v("inline")]),t._v(", "),i("code",[t._v("inline-block")]),t._v(", "),i("code",[t._v("inline-table")]),t._v("\n的元素，会生成 "),i("code",[t._v("inline-level box")]),t._v("。并且参与 "),i("code",[t._v("inline formatting context")]),t._v("；")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"formatting-context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#formatting-context","aria-hidden":"true"}},[this._v("#")]),this._v(" Formatting context")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("p",[i("code",[t._v("Formatting context")]),t._v(" 是 W3C CSS2.1 规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。最常见的 "),i("code",[t._v("Formatting context")]),t._v(" 有 "),i("code",[t._v("Block fomatting context")]),t._v(" (简称 BFC)和 "),i("code",[t._v("Inline formatting context")]),t._v(" (简称 IFC)。CSS2.1 中只有 BFC 和 IFC, CSS3 中还增加了 GFC 和 FFC。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("所谓的 "),e("code",[this._v("BFC")]),this._v("（块级格式化上下文）就是一个独立的渲染区域，只有 Block-level box 参与， 它规定了内部的 "),e("code",[this._v("Block-level Box")]),this._v(" 如何布局，并且与这个区域外部毫不相干。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"bfc-内部规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc-内部规则","aria-hidden":"true"}},[this._v("#")]),this._v(" BFC 内部规则")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("内部的 Box 会在垂直方向，一个接一个地放置。")]),t._v(" "),i("li",[t._v("Box 垂直方向的距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠")]),t._v(" "),i("li",[t._v("每个元素的 margin box 的左边， 与包含块 border box 的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。")]),t._v(" "),i("li",[t._v("BFC 的区域不会与 float box 重叠。")]),t._v(" "),i("li",[t._v("BFC 就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。")]),t._v(" "),i("li",[t._v("计算 BFC 的高度时，浮动元素也参与计算。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"bfc-的生成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc-的生成","aria-hidden":"true"}},[this._v("#")]),this._v(" BFC 的生成")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("根元素或包含根元素的元素")]),t._v(" "),i("li",[t._v("浮动元素（元素的 "),i("code",[t._v("float")]),t._v(" 不是 "),i("code",[t._v("none")]),t._v("）")]),t._v(" "),i("li",[t._v("绝对定位元素（元素的 "),i("code",[t._v("position")]),t._v(" 为 "),i("code",[t._v("absolute")]),t._v(" 或 "),i("code",[t._v("fixed")]),t._v("）")]),t._v(" "),i("li",[t._v("元素 "),i("code",[t._v("display")]),t._v("为"),i("code",[t._v("inline-block")]),t._v(","),i("code",[t._v("table-cell")]),t._v(","),i("code",[t._v("table-caption")]),t._v(", "),i("code",[t._v("table、table-row")]),t._v(", "),i("code",[t._v("table-row-group")]),t._v(","),i("code",[t._v("table-header-group")]),t._v(","),i("code",[t._v("table-footer-group")]),t._v(", "),i("code",[t._v("flow-root")])]),t._v(" "),i("li",[i("code",[t._v("overflow")]),t._v("值不为"),i("code",[t._v("visible")]),t._v(" 的块元素")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("GFC："),e("code",[this._v("gird formatting context")]),this._v(" gird 布局")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("p",[t._v("FFC:"),i("code",[t._v("flex formatting context")]),t._v(",ffc 中的 "),i("code",[t._v("container box")]),t._v(" 不存在 "),i("code",[t._v("block-level")]),t._v(" 或者 "),i("code",[t._v("inline-level")]),t._v(",每一个都是一个 "),i("code",[t._v("flex item")]),t._v("，flex 布局")])}],!1,null,null,null);n.options.__file="2.md";e.default=n.exports}}]);