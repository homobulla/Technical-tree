(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{378:function(a,t,s){"use strict";s.r(t);var e=s(45),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h3",{attrs:{id:"js-之变量对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-之变量对象"}},[a._v("#")]),a._v(" JS 之变量对象")]),a._v(" "),s("blockquote",[s("p",[a._v("JavaScript 变量松散类型的本质，决定了它只是在特定时间内保持一个特定值的名字而\n已")])]),a._v(" "),s("h3",{attrs:{id:"变量类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量类型"}},[a._v("#")]),a._v(" 变量类型")]),a._v(" "),s("ul",[s("li",[a._v("基本类型：String、Number、Boolean、Undefined、Null、BigInt、Symbol")]),a._v(" "),s("li",[a._v("引用类型：Object")])]),a._v(" "),s("p",[a._v("基本类型存储在栈内存中，数据长度是固定的，即本身无法改变。")]),a._v(" "),s("p",[a._v("引用类型存在堆内存之中，栈内存存放着一个引向该值的地址。这个区别在复制时很显然，\n基本类型会在新的栈内存中生成一个副本，而引用类型则在栈内存中存储一个相同的指针，\n指向原有的数据。由此引申出"),s("strong",[a._v("深拷贝与浅拷贝")]),a._v("。")]),a._v(" "),s("p",[a._v("除 Object 以外的所有类型都是不可变的（值本身无法被改变）。")]),a._v(" "),s("p",[a._v("JavaScript 中只有一种数字类型：基于 IEEE 754 标准的双精度 64 位二进制格式的值\n（-(253 -1) 到 253 -1）。由此出现"),s("code",[a._v("BigInt")]),a._v("类型，该类型可以用任意精度表示整数，且\n可以超出数字的安全整数限制（在数字末尾加 n）。"),s("strong",[a._v("它并没有为整数给出一种特定的类\n型")]),a._v("。除了能够表示浮点数外，还有一些带符号的值："),s("code",[a._v("+Infinity")]),a._v("，"),s("code",[a._v("-Infinity")]),a._v(" 和\n"),s("code",[a._v("NaN")]),a._v(" (非数值，Not-a-Number)。")]),a._v(" "),s("p",[s("code",[a._v("Symbol")]),a._v("符号类型是唯一的且不可修改的值。")]),a._v(" "),s("h3",{attrs:{id:"对象属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象属性"}},[a._v("#")]),a._v(" 对象属性")]),a._v(" "),s("p",[a._v("在 JS 中，对象是一组属性的集合。对象有两种属性：数据属性和访问器属性")]),a._v(" "),s("p",[a._v("数据属性的特性：")]),a._v(" "),s("ul",[s("li",[a._v("[[Value]]：属性值")]),a._v(" "),s("li",[a._v("[[Writable]]：能否修改属性值")]),a._v(" "),s("li",[a._v("[[Enumerable]]：能否通过"),s("code",[a._v("for in")]),a._v("遍历")]),a._v(" "),s("li",[a._v("[[Configurable]]：能否删除该属性从而重新定义属性")])]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("defineProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    value"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'homobulla'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    enumerable"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    configurable"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[a._v("访问器属性：")]),a._v(" "),s("ul",[s("li",[a._v("[[Enumerable]]:同上")]),a._v(" "),s("li",[a._v("[[Configurable]]:同上")]),a._v(" "),s("li",[a._v("[[Get]]：读取属性时调用的函数")]),a._v(" "),s("li",[a._v("[[Set]]：写入属性时调用的函数")])]),a._v(" "),s("h3",{attrs:{id:"map-set-weakmap-weakset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-set-weakmap-weakset"}},[a._v("#")]),a._v(" Map Set WeakMap WeakSet")]),a._v(" "),s("h4",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[a._v("#")]),a._v(" Map")]),a._v(" "),s("p",[s("strong",[a._v("Map")]),a._v(" 对象保存键值对，并且能够记住键的原始插入顺序。任何值(对象或\n者"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Primitive",target:"_blank",rel:"noopener noreferrer"}},[a._v("原始值"),s("OutboundLink")],1),a._v(") 都可以\n作为一个键或一个值。")]),a._v(" "),s("p",[a._v("该类型和 Object 相比优点在于：默认不包含任何键（即所谓属性值），键可以是任意值，\n键数量通过 Map.size()直接获取，键可以直接迭代，在频繁增删键值对的场景下表现更好\n。")]),a._v(" "),s("h4",{attrs:{id:"weakmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakmap"}},[a._v("#")]),a._v(" WeakMap")]),a._v(" "),s("p",[a._v("相比于 Map,该对象的"),s("strong",[a._v("键必须是对象")]),a._v("，键对象为“弱引用”，利于垃圾回收，但该键是不\n可枚举的。")]),a._v(" "),s("h4",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[a._v("#")]),a._v(" Set")]),a._v(" "),s("p",[a._v("可以存储任何类型且值唯一的特殊“数组”")]),a._v(" "),s("p",[a._v("WeakSet")]),a._v(" "),s("p",[a._v("相比于 Set,集合中必须是"),s("strong",[a._v("对象")]),a._v("，集合中对象的引用为弱引用，利于垃圾回收\n，"),s("code",[a._v("WeakSet")]),a._v(" 是不可枚举的。")])])}),[],!1,null,null,null);t.default=n.exports}}]);